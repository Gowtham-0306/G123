There are four access modifiers that control the visibility and accessibility of classes, methods, and variables within a program. These access modifiers are:

1. Public (public):
   - Class: If a class is declared as public, it can be accessed from any other class.
   - Method: A public method can be called from any other class.
   - Variable: A public variable can be accessed from any other class.

2. Private (private):
   - Class: A class cannot be declared as private. The default access level is package-private.
   - Method: A private method can only be accessed within the same class.
   - Variable: A private variable can only be accessed within the same class.

3. Protected (protected):
   - Class:A class cannot be declared as protected. The default access level is package-private.
   - Method: A protected method can be accessed within the same class, within the same package, and by subclasses (even if they are in a different package).
   - Variable: A protected variable can be accessed within the same class, within the same package, and by subclasses (even if they are in a different package).

4. Default (Package-Private):
   - Class:If no access modifier is specified (package-private), the class is accessible only within the same package.
   - Method: A method with default access can be accessed only within the same package.
   - Variable:A variable with default access can be accessed only within the same package.

The significance of these access modifiers lies in controlling the encapsulation and visibility of classes, methods, and variables. They help in designing classes that adhere to the principles of encapsulation, data hiding, and modularity. By appropriately setting access modifiers, you can control which parts of your code can be accessed and modified by other classes and which parts should remain hidden and internal to the class itself. This supports the idea of information hiding and helps in building robust and maintainable software.